---
- name: Create local user accounts for Linux and Windows hosts.
  hosts: all
  gather_facts: false
  tasks:
    - name: Create user account on EXOS switches.
      when: inventory_hostname in groups['switches']
      become: yes
      exos_config:
        commands="create account admin Local-Admin WGU123"
    - name: Get all user accounts on EXOS switches.
      when: inventory_hostname in groups['switches']
      become: yes
      exos_command:
        commands='show accounts'
      register: switch_output
    - name: Display switch user accounts.
      when: inventory_hostname in groups['switches']
      debug:
        var: switch_output.stdout
    - name: Create Linux user account for Test_Box_1.
      when: inventory_hostname == "test_box_1"
      become: yes
      
      user:
        name: TestUser1
        password: '$6$PUuag7W0IZTd$zU8AkbjXzFbPDaX9MuUbOTJoeCUxs6eC3KMRcKFCbxgtUTs.RhBUDCx.H1nSzHS38l.UrhGq3QyxZS969658c1'
        groups: sudo
        state: present
        shell: /bin/bash
        system: false
        createhome: true
    - name: Get users of Test_Box_1.
      become: yes
      
      when: inventory_hostname == "test_box_1"
      shell: |
        cat /etc/passwd
        
        groups TestUser1
      register: test_box_1_users
    - name: List users of Test_Box_1.
      when: inventory_hostname == "test_box_1"
      debug:
        var: test_box_1_users.stdout_lines
    - name: Create Linux user account for Test_Box_2.
      become: yes
      
      when: inventory_hostname == "test_box_2"
      user:
        name: TestUser2
        password: '$6$PUuag7W0IZTd$zU8AkbjXzFbPDaX9MuUbOTJoeCUxs6eC3KMRcKFCbxgtUTs.RhBUDCx.H1nSzHS38l.UrhGq3QyxZS969658c1'
        groups: sudo
        state: present
        shell: /bin/bash
        system: false
        createhome: true
    - name: Get users of Test_Box_2.
      become: yes
      
      when: inventory_hostname == "test_box_2"
      shell: |
        cat /etc/passwd
        
        groups TestUser2
      register: test_box_2_users
    - name: List users of Test_Box_2.
      when: inventory_hostname == "test_box_2"
      debug:
        var: test_box_2_users.stdout_lines
    - name: Create Windows user account for WindowsDesktop-1
      when: inventory_hostname == "windowsdesktop-1"
      win_user:
        name: DesktopUser1
        password: 'WGU123'
        state: present
        password_never_expires: yes
        groups:
          - Administrators
    - name: Get list of all Admin  users from WindowsDesktop-1
      when: inventory_hostname == "windowsdesktop-1"
      ansible.windows.win_shell: Get-LocalGroupMember -Name Administrators | Format-Table
      register: windowsdesktop1_users
    - name: List all Admin users from WindowsDesktop-1
      when: inventory_hostname == "windowsdesktop-1"
      debug:
        var: windowsdesktop1_users.stdout_lines
    - name: Create Windows user account for WindowsDesktop-2
      when: inventory_hostname == "windowsdesktop-2"
      win_user:
        name: DesktopUser2
        password: 'WGU123'
        state: present
        password_never_expires: yes
        groups:
          - Administrators
    - name: Get list of all Admin  users from WindowsDesktop-2
      when: inventory_hostname == "windowsdesktop-2"
      ansible.windows.win_shell: Get-LocalGroupMember -Name Administrators | Format-Table
      register: windowsdesktop2_users
    - name: List all Admin users from WindowsDesktop-2
      when: inventory_hostname == "windowsdesktop-2"
      debug:
        var: windowsdesktop2_users.stdout_lines
    - name: Create Windows user account for WindowsDesktop-3
      when: inventory_hostname == "windowsdesktop-3"
      win_user:
        name: DesktopUser3
        password: 'WGU123'
        state: present
        password_never_expires: yes
        groups:
          - Administrators
    - name: Get list of all Admin  users from WindowsDesktop-3
      when: inventory_hostname == "windowsdesktop-3"
      ansible.windows.win_shell: Get-LocalGroupMember -Name Administrators | Format-Table
      register: windowsdesktop3_users
    - name: List all Admin users from WindowsDesktop-3
      when: inventory_hostname == "windowsdesktop-3"
      debug:
        var: windowsdesktop3_users.stdout_lines
    - name: Create Windows user account for WindowsDesktop-4
      when: inventory_hostname == "windowsdesktop-4"
      win_user:
        name: DesktopUser4
        password: 'WGU123'
        state: present
        password_never_expires: yes
        groups:
          - Administrators
    - name: Get list of all Admin  users from WindowsDesktop-4
      when: inventory_hostname == "windowsdesktop-4"
      ansible.windows.win_shell: Get-LocalGroupMember -Name Administrators | Format-Table
      register: windowsdesktop4_users
    - name: List all Admin users from WindowsDesktop-4
      when: inventory_hostname == "windowsdesktop-4"
      debug:
        var: windowsdesktop4_users.stdout_lines
